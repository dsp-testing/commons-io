# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '30 16 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: java-kotlin
          build-mode: manual # This mode only analyzes Java. Set this to 'autobuild' or 'manual' to analyze Kotlin too.
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Setup dependabot proxy.
    - name: Setup dependabot proxy
      uses: aibaars/dependabot-action@test-proxy
      env:
        DEPENDABOT_CREDENTIALS: ${{ secrets.DEPENDABOT_CREDENTIALS || vars.DEPENDABOT_CREDENTIALS }}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # If the analyze step fails for one of the languages you are analyzing with
    # "We were unable to automatically build your code", modify the matrix above
    # to set the build mode to "manual" for that language. Then modify this step
    # to build your code.
    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    - if: matrix.build-mode == 'manual' && matrix.language != 'java-kotlin'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - if: matrix.build-mode == 'manual' && matrix.language == 'java-kotlin'
      run: |
        sed -i -e 's/buildMode: manual/buildMode: none/' "${CODEQL_EXTRACTOR_JAVA_WIP_DATABASE}/codeql-database.yml"
        CONTAINER="$(docker container create \
         -v "${CODEQL_DIST}:${CODEQL_DIST}" \
         -v "${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}" \
         -v "${CODEQL_EXTRACTOR_JAVA_WIP_DATABASE}:${CODEQL_EXTRACTOR_JAVA_WIP_DATABASE}" \
         ubuntu /usr/bin/tail -f)"
        docker container start "${CONTAINER}"

        docker container exec "${CONTAINER}" apt update

        docker container exec "${CONTAINER}" apt install -y ca-certificates
        docker container cp "${PROXY_CA_CERT}" "${CONTAINER}:/usr/local/share/ca-certificates/proxy.crt"
        docker container exec "${CONTAINER}" update-ca-certificates

        docker container exec "${CONTAINER}" apt install -y proxychains4
        echo "strict_chain
            proxy_dns
            tcp_read_time_out 15000
            tcp_connect_time_out 8000
            [ProxyList]
            http    ${PROXY_HOST} ${PROXY_PORT}" > "${RUNNER_TEMP}/proxychains4.conf"
        docker container cp "${RUNNER_TEMP}/proxychains4.conf" "${CONTAINER}:/etc/proxychains4.conf"

        docker container exec "${CONTAINER}" apt install -y gradle maven
        docker network disconnect bridge "${CONTAINER}"
        docker network connect "${PROXY_NETWORK_NAME}" "${CONTAINER}"
        docker container exec "${CONTAINER}" groupadd -o  -g `id -g` group
        docker container exec "${CONTAINER}" useradd -o -u `id -u` -g `id -g` --create-home user
        docker container exec  -u `id -u`:`id -g` "${CONTAINER}" \
         proxychains4 "${CODEQL_DIST}/codeql" database trace-command --use-build-mode --working-dir "${GITHUB_WORKSPACE}" "${CODEQL_EXTRACTOR_JAVA_WIP_DATABASE}"

        docker container stop "${CONTAINER}"
        docker container remove "${CONTAINER}"

        sed -i -e 's/buildMode: none/buildMode: manual/' "${CODEQL_EXTRACTOR_JAVA_WIP_DATABASE}/codeql-database.yml"

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
